name: Build by Ren'Py 6.99.12.4

on: [push]

env:
  FOLDER_NAME: "DDLC_MAS_JP"
  # ARTIFACT_NAME: ${{ env.FOLDER_NAME }}_$(git describe --tags)
  # PATCH_VERSION: $(git describe --tags)
  DDLC_VERSION: "v1.1.1"
  MAS_VERSION: "0.10.4"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Get Git describe version and set to env
        run: |
          echo ::set-env name=PATCH_VERSION::$(git describe --tags)
          echo ::set-env name=ARTIFACT_NAME::${{ env.FOLDER_NAME }}_$(git describe --tags)

      - name: Download Monika After Story v0.7.2
        run: |
          wget -qO mas.zip https://s3-us-west-2.amazonaws.com/monika-after-story/ddlc/mas.zip
          unzip -q mas.zip -d mas
          rm mas.zip

      - name: Marge newest MAS and JP patch
        run: |
          cp -fpr MonikaModDev/Monika\ After\ Story/* mas/
          cp -fpr patch/* mas/

      - name: Build by Ren'Py 6.99.12.4
        id: build
        uses: ProjectAliceDev/renpy-build-action@master
        with:
          sdk-version: "6.99.12.4"
          project-dir: "mas"
        env:
          SDL_AUDIODRIVER: dummy
          SDL_VIDEODRIVER: dummy

      - name: Repackage
        run: |
          unzip -q $(ls -d ${{ steps.build.outputs.dir }}/*-Mod.zip) -d temp
          mv temp/$(ls temp | head -n1)/ ${{ env.ARTIFACT_NAME }}/

      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}

      - name: Release preparation
        if: startsWith(github.ref, 'refs/tags/')
        run: zip -q -r ${{ env.ARTIFACT_NAME }}.zip ${{ env.ARTIFACT_NAME }}/

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.PATCH_VERSION }}
          release_name: ver${{ env.PATCH_VERSION }} for v${{ env.MAS_VERSION }}
          draft: true

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.ARTIFACT_NAME }}.zip
          asset_name: ${{ env.ARTIFACT_NAME }}.zip
          asset_content_type: application/zip
