name: Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get Git describe version and set to env
        run: |
          PATCH_VERSION=`git describe --tags`
          MAS_VERSION=`grep -oP '(?<=define config.version = ").+(?=")' ./patch/game/options.rpy`
          ARTIFACT_NAME=DDLC_MAS_JP_$PATCH_VERSION
          echo ::set-env name=PATCH_VERSION::$PATCH_VERSION
          echo ::set-env name=MAS_VERSION::$MAS_VERSION
          echo ::set-env name=ARTIFACT_NAME::$ARTIFACT_NAME

      - name: Build by Ren'Py 6.99.12.4
        run: chmod -R +x ./tools/*.sh && ./tools/distribute.sh

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.PATCH_VERSION }}
          release_name: ver${{ env.PATCH_VERSION }} for v${{ env.MAS_VERSION }}
          draft: true

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.ARTIFACT_NAME }}.zip
          asset_name: ${{ env.ARTIFACT_NAME }}.zip
          asset_content_type: application/zip

  check-translate:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check translates
        run: chmod -R +x ./tools/*.sh && python3 tools/check_translate.py

      - if: failure()
        name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: Check translates error report
          path: ./error_report.tab
